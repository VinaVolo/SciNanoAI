import os
import gradio as gr
import requests

DB_API_URL = "http://localhost:8000"  # API –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
CHAT_API_URL = "http://localhost:8001"  # API –¥–ª—è —á–∞—Ç–∞

def chat(user_input, history):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ —á–∞—Ç API
        response = requests.post(f"{CHAT_API_URL}/chat", json={"message": user_input})
        if response.status_code == 200:
            data = response.json()
            reply = data['reply']
            history.append((user_input, reply))
        else:
            error_message = f"–û—à–∏–±–∫–∞ –≤ —á–∞—Ç-–±–æ—Ç–µ: {response.text}"
            history.append((user_input, error_message))
        return "", history
    except Exception as e:
        error_message = f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —á–∞—Ç-–±–æ—Ç–æ–º: {str(e)}"
        history.append((user_input, error_message))
        return "", history

def clear_chat():
    try:
        # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
        response = requests.post(f"{CHAT_API_URL}/clear_history")
        if response.status_code == 200:
            return []
        else:
            error_message = f"–û—à–∏–±–∫–∞ API –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {response.text}"
            return [(None, error_message)]
    except Exception as e:
        error_message = f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —á–∞—Ç-–±–æ—Ç–æ–º: {str(e)}"
        return [(None, error_message)]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Gradio
with gr.Blocks() as demo:
    gr.Markdown("# ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatBot!")
    gr.Markdown("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —á–∞—Ç-–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ RAG. –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö 301 –¥–æ–∫—É–º–µ–Ω—Ç. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å!")

    chatbot_widget = gr.Chatbot()
    message_input = gr.Textbox(placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∑–¥–µ—Å—å...")
    submit_button = gr.Button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")
    clear_button = gr.Button("–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç")

    # –°–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    message_input.submit(chat, inputs=[message_input, chatbot_widget], outputs=[message_input, chatbot_widget])  # –ù–∞–∂–∞—Ç–∏–µ Enter
    submit_button.click(chat, inputs=[message_input, chatbot_widget], outputs=[message_input, chatbot_widget])  # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    clear_button.click(clear_chat, outputs=[chatbot_widget])

demo.launch(
    auth=(os.environ["username"], os.environ["password"]),
    auth_message="Enter your username and password",
    server_port=8517,
    server_name="0.0.0.0",
    root_path="/scinanoai"
)